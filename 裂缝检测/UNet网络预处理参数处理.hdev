<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="22.05.0.0">
<procedure name="main">
<interface/>
<body>
<l>dev_update_off ()</l>
<c>*存放分类图片的上一级路径</c>
<l>RawImageFolder := 'D:/桌面/数据集/'</l>
<c>*存放预处理数据的总路径</c>
<l>ExampleDataDir:= RawImageFolder+'class_data'</l>
<c>*存放预处理数据的二级路径</c>
<l>DataDirectoryBaseName := ExampleDataDir + '/dldataset_pokeman'</l>
<c>*图像的基目录。</c>
<l>ImageDir:='D:/桌面/数据集/100_images'</l>
<c>*分割图像的基础目录。</c>
<l>SegmentationDir :='D:/桌面/数据集/100_labels'</l>
<c>*类名</c>
<l>ClassNames:=['background','crack']</l>
<c>*类id</c>
<l>ClassIDs:=[0,1]</l>
<c>*MVTec深度学习工具创建的DLDataset字典的路径</c>
<l>DLDatasetDict:='D:/桌面/数据集/100.hdict'</l>
<c>* </c>
<c>*分割数据集的百分比。</c>
<c>*训练集</c>
<l>TrainingPercent := 80</l>
<c>*验证集</c>
<l>ValidationPercent := 20 </l>
<c>*模型类型</c>
<l>ModelType :='segmentation'</l>
<c>* 用户想要输入的图像大小，可更改</c>
<l>ImageWidth := 224</l>
<l>ImageHeight := 224</l>
<l>ImageNumChannels := 1</l>
<c>* </c>
<c>*用于图像预处理的其他参数。</c>
<l>NormalizationType := 'none'</l>
<l>DomainHandling := 'full_domain'</l>
<c>* </c>
<c>*为了获得可复制的分割，我们设置了一个随机种子。</c>
<c>*这意味着重新运行脚本将导致DLDataset的相同拆分。</c>
<l>SeedRand := 42</l>
<c>*设置随机种子。</c>
<l>set_system ('seed_rand', SeedRand)</l>
<c>*使用过程read_dl_dataset_segmentation读取数据集。</c>
<c>*或者，您可以使用read_dict（）读取由MVTec深度学习工具创建的DLDataset字典。</c>
<l>* read_dict (DLDatasetDict, [], [], DLDataset)</l>
<l> read_dl_dataset_segmentation (ImageDir, SegmentationDir, ClassNames, ClassIDs, [], [], [], DLDataset)</l>
<c>*分割数据集</c>
<l>split_dl_dataset (DLDataset, TrainingPercent, ValidationPercent, [])</l>
<c>*创建输出目录（如果尚不存在）。</c>
<l>file_exists (ExampleDataDir, FileExists)</l>
<l>if (not FileExists)</l>
<l>    make_dir (ExampleDataDir)</l>
<l>endif</l>
<c>* </c>
<c>*创建预处理参数。</c>
<l>create_dl_preprocess_param (ModelType, ImageWidth, ImageHeight, ImageNumChannels,\
                            -127, 128, NormalizationType, DomainHandling,\
                            [], [], [], [], DLPreprocessParam)</l>
<c></c>
<c>* </c>
<c>*数据集目录，用于由preprocess_dl_dataset编写的任何输出。</c>
<l>DataDirectory := DataDirectoryBaseName + '_' + ImageWidth + 'x' + ImageHeight</l>
<c>* </c>
<c>*预处理数据集。 这可能需要几秒钟。</c>
<l>create_dict (GenParam)</l>
<l>set_dict_tuple (GenParam, 'overwrite_files', true)</l>
<l>set_dict_tuple (GenParam, 'show_progress', true)</l>
<c>*对DLDataset中声明的整个数据集进行标准预处理</c>
<l>preprocess_dl_dataset (DLDataset, DataDirectory, DLPreprocessParam, GenParam, DLDatasetFileName)</l>
<c>* </c>
<c>*单独存储预处理参数以便使用，未标准预处理</c>
<l>PreprocessParamFileBaseName := DataDirectory + '/fissure_Preprocessing_parameters.hdict'</l>
<l>write_dict (DLPreprocessParam, PreprocessParamFileBaseName, [], [])</l>
<c>*在进行培训之前，建议先检查预处理后的数据集。</c>
<c>*</c>
<c>*显示10个随机选择的图像的DLSamples。</c>
<l>get_dict_tuple (DLDataset, 'samples', DatasetSamples)</l>
<l>find_dl_samples (DatasetSamples, 'split', 'train', 'match', SampleIndices)</l>
<l>tuple_shuffle (SampleIndices, ShuffledIndices)</l>
<l>read_dl_samples (DLDataset, ShuffledIndices[0:9], DLSampleBatchDisplay)</l>
<c>* </c>
<l>create_dict (WindowHandleDict)</l>
<l>for Index := 0 to |DLSampleBatchDisplay| - 1 by 1</l>
<c>    *在DLSampleBatchDisplay中循环采样。</c>
<l>    dev_display_dl_data (DLSampleBatchDisplay[Index], [], DLDataset, 'segmentation_image_ground_truth',\
                         [], WindowHandleDict)</l>
<l>    Text := 'Press Run (F5) to continue'</l>
<l>    dev_disp_text (Text, 'window', 'bottom', 'right', 'black', [], [])</l>
<l>    stop ()</l>
<l>endfor</l>
<c>* </c>
<c>* 关闭窗口，数据预处理完成</c>
<l>dev_close_window_dict (WindowHandleDict)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
